version: 2
jobs:
    build:
        working_directory: ~/repo
        docker:
            - image: circleci/node:8.9.0

        steps:
            - checkout
            - run:
                name: Show current branch
                command: echo ${CIRCLE_BRANCH}

            - restore_cache:
                keys:
                    - v1-dependencies-{{ checksum "package.json" }}

            - run:
                name: Install dependencies
                command: yarn install

            - save_cache:
                key: v1-dependencies-{{ checksum "package.json" }}
                paths:
                    - node_modules

            - run:
                name: Test
                command: yarn test

    deploy:
        workig_directory: ~/repo
        docker:
            - image: circleci/node:8.9.0
        steps:
            - checkout
            - run:
                name: Installing Python and AWS-cli
                working_directory: /
                command: |
                    sudo apt-get -y -qq update
                    sudo apt-get install python-pip python-dev build-essential
                    sudo pip install awsebcli --upgrade
            - run:
                name: Deploying Prod on AWS EB
                command: eb deploy

    deploy_staging:
        workig_directory: ~/repo
        docker:
            - image: circleci/node:8.9.0
        steps:
            - checkout
            - run:
                name: Installing Python and AWS-cli
                working_directory: /
                command: |
                    sudo apt-get -y -qq update
                    sudo apt-get install python-pip python-dev build-essential
                    sudo pip install awsebcli --upgrade
            - run:
                name: Deploying Staging Pipelines API on AWS EB
                command: eb deploy CiTest-env
            - run:
                name: Deploying Staging Worker on AWS EB
                command: eb deploy CiWorkerTest-env

workflows:
  version: 2
  build_and_deploy:
    jobs:
        - build
        - deploy:
            requires:
                - build
            filters:
                branches:
                    only: master
        - deploy_staging:
            requires:
                - build
            filters:
                branches:
                    only: staging


